<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | CopyAndPaste]]></title>
  <link href="http://michaelay.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://michaelay.github.io/"/>
  <updated>2015-01-09T11:27:20-08:00</updated>
  <id>http://michaelay.github.io/</id>
  <author>
    <name><![CDATA[MichaelAY]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Useful Link About Metaclasses]]></title>
    <link href="http://michaelay.github.io/blog/2015/01/09/useful-link-about-metaclasses/"/>
    <updated>2015-01-09T11:23:57-08:00</updated>
    <id>http://michaelay.github.io/blog/2015/01/09/useful-link-about-metaclasses</id>
    <content type="html"><![CDATA[<p>A useful link about ruby metaclasses
<a href="http://viewsourcecode.org/why/hacking/seeingMetaclassesClearly.html">http://viewsourcecode.org/why/hacking/seeingMetaclassesClearly.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Default Encoding]]></title>
    <link href="http://michaelay.github.io/blog/2014/12/29/default-encoding/"/>
    <updated>2014-12-29T16:06:10-08:00</updated>
    <id>http://michaelay.github.io/blog/2014/12/29/default-encoding</id>
    <content type="html"><![CDATA[<p>To change ruby encoding, run ruby with -E [coding].</p>

<p>Example:</p>

<pre><code class="sh">#!/bin/ruby -E UTF-8
ruby code here
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Zip to Do Pairing of Enumerators]]></title>
    <link href="http://michaelay.github.io/blog/2014/12/29/use-zip-to-do-pairing-of-enumerators/"/>
    <updated>2014-12-29T16:05:26-08:00</updated>
    <id>http://michaelay.github.io/blog/2014/12/29/use-zip-to-do-pairing-of-enumerators</id>
    <content type="html"><![CDATA[<p><em>pending</em>
use to_a.zip or zip</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Suppress Stdout and Stderr When Running RSpec]]></title>
    <link href="http://michaelay.github.io/blog/2014/12/15/suppress-stdout-and-stderr-when-running-rspec/"/>
    <updated>2014-12-15T13:45:19-08:00</updated>
    <id>http://michaelay.github.io/blog/2014/12/15/suppress-stdout-and-stderr-when-running-rspec</id>
    <content type="html"><![CDATA[<p>Sometimes code prints to stdout, stderr. Corresponding RSpec examples print the same output, which could be messy. To suppress the output:</p>

<pre><code class="ruby">def silence
    # Store the original stderr and stdout in order to restore them later
    @original_stderr = $stderr
    @original_stdout = $stdout

    # Redirect stderr and stdout
    $stderr = $stdout = StringIO.new

    yield

    $stderr = @original_stderr
    $stdout = @original_stdout
    @original_stderr = nil
    @original_stdout = nil
end

it "suppresses output" do 
    silence do 
        # whatever code to test 
    end 
end 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Output With Color]]></title>
    <link href="http://michaelay.github.io/blog/2014/12/08/ruby-output-with-color/"/>
    <updated>2014-12-08T15:23:13-08:00</updated>
    <id>http://michaelay.github.io/blog/2014/12/08/ruby-output-with-color</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/fazibear/colorize">Colorize - prints output in console with color</a></p>

<p><code>sudo gem install colorize</code></p>

<pre><code class="ruby">require 'colorize'
puts "some output".red
</code></pre>
]]></content>
  </entry>
  
</feed>
